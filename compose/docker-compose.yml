services:
  # --- Core infrastructure ---
  caddy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    environment:
      - TZ=${TZ}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /srv/appdata/caddy:/etc/caddy:ro
      - /srv/appdata/caddy/data:/data
      - /srv/appdata/caddy/config:/config
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks: [proxy]

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    command: --label-enable --cleanup --interval 43200
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=${TZ}

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${CF_TUNNEL_TOKEN}
      - TZ=${TZ}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # --- Monitoring ---
  uptimekuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    restart: unless-stopped
    environment:
      - TZ=${TZ}
    volumes:
      - /srv/appdata/uptime-kuma:/app/data
    ports:
      - "3001:3001"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks: [proxy]

  ntfy:
    image: binwiederhier/ntfy:latest
    container_name: ntfy
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - NTFY_LISTEN_HTTP=:80
    command: ["serve"]
    volumes:
      - /srv/appdata/ntfy/cache:/var/cache/ntfy
      - /srv/appdata/ntfy/config:/etc/ntfy
    ports:
      - "8080:80"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks: [proxy]

  # --- Media stack ---
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /srv/appdata/jellyfin/config:/config
      - /srv/appdata/jellyfin/cache:/cache
      - /srv/media:/data:ro
    ports:
      - "8096:8096"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks: [proxy]

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - LOG_LEVEL=info
    volumes:
      - /srv/appdata/jellyseerr:/app/config
    ports:
      - "5055:5055"
    networks: [proxy]
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  gluetun-qb:
    image: qmcgaw/gluetun:latest
    container_name: gluetun-qb
    restart: unless-stopped
    cap_add: [NET_ADMIN]
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - TZ=${TZ}
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - WIREGUARD_PUBLIC_KEY=${PIA_WG_PUBLIC_KEY}
      - WIREGUARD_PRIVATE_KEY=${PIA_WG_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${PIA_WG_ADDRESS}
      - WIREGUARD_ENDPOINT_IP=${PIA_WG_ENDPOINT_IP}
      - WIREGUARD_ENDPOINT_PORT=${PIA_WG_ENDPOINT_PORT}
      - VPN_PORT_FORWARDING=on
      - VPN_PORT_FORWARDING_STATUS_FILE=/gluetun/forwarded_port
      - VPN_PORT_FORWARDING_PROVIDER="private internet access"
      - VPN_PORT_FORWARDING_USERNAME=${PIA_USER}
      - VPN_PORT_FORWARDING_PASSWORD=${PIA_PASS}
      - VPN_PORT_FORWARDING_UP_COMMAND=/bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://127.0.0.1:8080/api/v2/app/setPreferences 2>&1'
      - SERVER_NAMES=amsterdam428
      - FIREWALL_INPUT_PORTS=8080
    volumes:
      - /srv/appdata/gluetun-qb:/gluetun
    ports:
      - "8082:8080/tcp"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    network_mode: "service:gluetun-qb"
    depends_on: [gluetun-qb]
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - WEBUI_PORT=8080
    volumes:
      - /srv/appdata/qbittorrent:/config
      - /srv/media:/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  gluetun-sab:
    image: qmcgaw/gluetun:latest
    container_name: gluetun-sab
    restart: unless-stopped
    cap_add: [NET_ADMIN]
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - TZ=${TZ}
      - VPN_SERVICE_PROVIDER=nordvpn
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${NORD_USER}
      - OPENVPN_PASSWORD=${NORD_PASS}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
      - SERVER_CATEGORIES=${SERVER_CATEGORIES}
      - OPENVPN_PROTOCOL=udp
      - FIREWALL_INPUT_PORTS=8080
    volumes:
      - /srv/appdata/gluetun-sab:/gluetun
    ports:
      - "8083:8080/tcp"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    network_mode: "service:gluetun-sab"
    depends_on: [gluetun-sab]
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /srv/appdata/sabnzbd:/config
      - /srv/media:/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    dns: [9.9.9.9, 194.242.2.2]
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /srv/appdata/prowlarr:/config
    ports:
      - "9696:9696"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks: [proxy]

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /srv/appdata/sonarr:/config
      - /srv/media:/data
    ports:
      - "8989:8989"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks: [proxy]

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /srv/appdata/radarr:/config
      - /srv/media:/data
    ports:
      - "7878:7878"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks: [proxy]

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /srv/appdata/bazarr:/config
      - /srv/media:/data
    ports:
      - "6767:6767"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks: [proxy]

  byparr:
    image: ghcr.io/thephaseless/byparr:latest
    container_name: byparr
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - LOG_LEVEL=DEBUG
    volumes:
      - /srv/appdata/byparr:/config
    networks: [proxy]
    shm_size: "1g"
    dns:
      - 9.9.9.9
      - 194.242.2.2
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  recyclarr:
    image: ghcr.io/recyclarr/recyclarr:latest
    container_name: recyclarr
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - CRON_SCHEDULE=@daily
    user: "${PUID}:${PGID}"
    volumes:
      - /srv/appdata/recyclarr:/config
    depends_on: [sonarr, radarr]
    networks: [proxy]
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  huntarr:
    image: ghcr.io/thephaseless/huntarr:latest
    container_name: huntarr
    restart: unless-stopped
    network_mode: "service:gluetun-qb"
    depends_on: [gluetun-qb]
    environment:
      - TZ=${TZ}
    volumes:
      - /srv/appdata/huntarr:/config

  shoko_server:
    image: ghcr.io/shokoanime/server:latest
    container_name: shoko_server
    restart: unless-stopped
    shm_size: 256m
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    ports:
      - "8111:8111"
    volumes:
      - /srv/appdata/shoko:/home/shoko/.shoko
      - /srv/media/anime:/mnt/anime:rw
    networks: [proxy]

  cross-seed:
    image: lscr.io/hotio/cross-seed:latest
    container_name: cross-seed
    restart: unless-stopped
    network_mode: "service:gluetun-qb"
    depends_on: [gluetun-qb]
    environment:
      - TZ=${TZ}
    volumes:
      - /srv/appdata/cross-seed:/config
      - /srv/appdata/qbittorrent:/qbconfig:ro
      - /srv/media:/data:ro
      
networks:
  proxy:
    name: proxy
    driver: bridge
